class CrewPydanticOutputParser {
    constructor(pydanticObject) {
      this.pydanticObject = pydanticObject;
    }
  
    parse(text) {
      try {
        const jsonStr = text.substring(text.indexOf('{'), text.lastIndexOf('}') + 1);
        const parsed = JSON.parse(jsonStr);
        return this.validateAndConvert(parsed);
      } catch (error) {
        console.error("Error parsing output:", error);
        return null;
      }
    }
  
    validateAndConvert(obj) {
      // This is a simplified validation. You might want to add more robust checks.
      const result = {};
      for (const [key, value] of Object.entries(this.pydanticObject)) {
        if (obj.hasOwnProperty(key)) {
          result[key] = obj[key];
        } else {
          console.warn(`Missing key in output: ${key}`);
          result[key] = null;
        }
      }
      return result;
    }
  
    getFormatInstructions() {
      const schema = JSON.stringify(this.pydanticObject, null, 2);
      return `Your response should be formatted as a JSON object matching this schema:\n${schema}\n`;
    }
  }
  
  export { CrewPydanticOutputParser };