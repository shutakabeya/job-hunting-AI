import { Agent } from './agent';
import { Task } from './task';
import { Process } from './process';
import { CrewBase } from './crew_base';

class CrewJSONEncoder {
    static encode(obj) {
        if (obj instanceof Agent) {
            return {
                _type: 'Agent',
                ...obj.toJSON()
            };
        } else if (obj instanceof Task) {
            return {
                _type: 'Task',
                ...obj.toJSON()
            };
        } else if (obj instanceof Process) {
            return {
                _type: 'Process',
                ...obj.toJSON()
            };
        } else if (obj instanceof CrewBase) {
            return {
                _type: 'CrewBase',
                ...obj.toJSON()
            };
        } else if (Array.isArray(obj)) {
            return obj.map(item => CrewJSONEncoder.encode(item));
        } else if (typeof obj === 'object' && obj !== null) {
            const encoded = {};
            for (const [key, value] of Object.entries(obj)) {
                encoded[key] = CrewJSONEncoder.encode(value);
            }
            return encoded;
        }
        return obj;
    }

    static decode(obj) {
        if (typeof obj === 'object' && obj !== null && '_type' in obj) {
            switch (obj._type) {
                case 'Agent':
                    return new Agent(obj);
                case 'Task':
                    return new Task(obj);
                case 'Process':
                    return new Process(obj);
                case 'CrewBase':
                    return new CrewBase(obj.agents, obj.tasks, obj.processes, obj.verbose);
                default:
                    return obj;
            }
        } else if (Array.isArray(obj)) {
            return obj.map(item => CrewJSONEncoder.decode(item));
        } else if (typeof obj === 'object' && obj !== null) {
            const decoded = {};
            for (const [key, value] of Object.entries(obj)) {
                decoded[key] = CrewJSONEncoder.decode(value);
            }
            return decoded;
        }
        return obj;
    }
}

export { CrewJSONEncoder };