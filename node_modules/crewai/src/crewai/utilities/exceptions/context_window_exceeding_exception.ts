class LLMContextLengthExceededException extends Error {
  static CONTEXT_LIMIT_ERRORS = [
    "maximum context length",
    "context length exceeded",
    "context_length_exceeded",
    "context window full",
    "too many tokens",
    "input is too long",
    "exceeds token limit",
  ];

  constructor(errorMessage) {
    super(LLMContextLengthExceededException._getErrorMessage(errorMessage));
    this.name = 'LLMContextLengthExceededException';
    this.originalErrorMessage = errorMessage;
  }

  static _isContextLimitError(errorMessage) {
    return this.CONTEXT_LIMIT_ERRORS.some(phrase => 
      errorMessage.toLowerCase().includes(phrase.toLowerCase())
    );
  }

  static _getErrorMessage(errorMessage) {
    return `LLM context length exceeded. Original error: ${errorMessage}\n` +
           "Consider using a smaller input or implementing a text splitting strategy.";
  }
}

export { LLMContextLengthExceededException };