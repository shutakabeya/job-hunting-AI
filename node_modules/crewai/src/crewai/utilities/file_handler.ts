import fs from 'fs/promises';
import path from 'path';

class FileHandler {
    static async readFile(filePath) {
        try {
            const content = await fs.readFile(filePath, 'utf-8');
            return content;
        } catch (error) {
            console.error(`Error reading file ${filePath}:`, error);
            return null;
        }
    }

    static async writeFile(filePath, content) {
        try {
            const directory = path.dirname(filePath);
            await fs.mkdir(directory, { recursive: true });
            await fs.writeFile(filePath, content);
            return true;
        } catch (error) {
            console.error(`Error writing file ${filePath}:`, error);
            return false;
        }
    }

    static async fileExists(filePath) {
        try {
            await fs.access(filePath);
            return true;
        } catch {
            return false;
        }
    }

    static async listFiles(directoryPath) {
        try {
            const files = await fs.readdir(directoryPath);
            return files;
        } catch (error) {
            console.error(`Error listing files in ${directoryPath}:`, error);
            return [];
        }
    }

    static async deleteFile(filePath) {
        try {
            await fs.unlink(filePath);
            return true;
        } catch (error) {
            console.error(`Error deleting file ${filePath}:`, error);
            return false;
        }
    }
}

export { FileHandler };