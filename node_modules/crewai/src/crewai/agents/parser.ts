import fs from 'fs/promises';

class YamlParser {
    static async parse(filePath) {
        try {
            const content = await fs.readFile(filePath, 'utf-8');
            let modifiedContent = content;

            // Replace single { and } with doubled ones, while leaving already doubled ones intact and the other special characters {# and {%
            modifiedContent = modifiedContent.replace(/(?<!\{){(?!\{)(?!\#)(?!\%)/g, "{{");
            modifiedContent = modifiedContent.replace(/(?<!\})(?<!\%)(?<!\#)\}(?!})/g, "}}");

            // Check for 'context:' not followed by '['
            if (/context:(?!\s*\[)/.test(modifiedContent)) {
                throw new Error(
                    "Context is currently only supported in code when creating a task. " +
                    "Please use the 'context' key in the task configuration."
                );
            }

            return modifiedContent;
        } catch (error) {
            console.error(`Error parsing YAML file: ${error.message}`);
            throw error;
        }
    }
}

export { YamlParser };