import { StructuredTool } from 'langchain/tools';
import { CacheHandler } from '../agents/cache';

class CacheTools {
  constructor(name = "Hit Cache", cacheHandler = new CacheHandler()) {
    this.name = name;
    this.cacheHandler = cacheHandler;
  }

  tool() {
    return new StructuredTool({
      name: this.name,
      description: "Reads directly from the cache",
      schema: {
        type: "object",
        properties: {
          key: { type: "string" }
        },
        required: ["key"]
      },
      func: this.hitCache.bind(this)
    });
  }

  hitCache(key) {
    const split = key.split("tool:");
    const tool = split[1].split("|input:")[0].trim();
    const toolInput = split[1].split("|input:")[1].trim();
    return this.cacheHandler.read(tool, toolInput);
  }
}

export { CacheTools };