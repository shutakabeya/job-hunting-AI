import z from 'zod';

const ToolCalling = z.object({
  tool_name: z.string().describe("The name of the tool to be called."),
  arguments: z.record(z.any()).optional().describe("A dictionary of arguments to be passed to the tool.")
});

const InstructorToolCalling = z.object({
  tool_name: z.string().describe("The name of the tool to be called."),
  arguments: z.record(z.any()).optional().describe("A dictionary of arguments to be passed to the tool.")
});

class ToolCallingClass {
  constructor(data) {
    const validatedData = ToolCalling.parse(data);
    Object.assign(this, validatedData);
  }

  static parse(data) {
    return new ToolCallingClass(data);
  }
}

class InstructorToolCallingClass {
  constructor(data) {
    const validatedData = InstructorToolCalling.parse(data);
    Object.assign(this, validatedData);
  }
}

export {
  ToolCalling: ToolCallingClass,
  InstructorToolCalling: InstructorToolCallingClass
};