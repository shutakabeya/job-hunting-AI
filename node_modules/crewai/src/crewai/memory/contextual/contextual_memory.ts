import { ShortTermMemory } from '../short_term/short_term_memory';
import { LongTermMemory } from '../long_term/long_term_memory';
import { EntityMemory } from '../entity/entity_memory';

class ContextualMemory {
  constructor(stm, ltm, em) {
    this.stm = stm;
    this.ltm = ltm;
    this.em = em;
  }

  buildContextForTask(task, context) {
    const query = `${task.description} ${context}`.trim();

    if (query === "") {
      return "";
    }

    const contextParts = [
      this._fetchLtmContext(task.description),
      this._fetchStmContext(query),
      this._fetchEntityContext(query)
    ];

    return contextParts.filter(Boolean).join("\n");
  }

  _fetchStmContext(query) {
    const stmResults = this.stm.search(query);
    if (stmResults.length === 0) {
      return "";
    }
    const formattedResults = stmResults.map(result => `- ${result}`).join("\n");
    return `Recent Insights:\n${formattedResults}`;
  }

  _fetchLtmContext(task) {
    const ltmResults = this.ltm.search(task, { latest_n: 2 });
    if (!ltmResults || ltmResults.length === 0) {
      return null;
    }

    const formattedResults = ltmResults
      .flatMap(result => result.metadata.suggestions)
      .filter((suggestion, index, self) => self.indexOf(suggestion) === index)
      .map(suggestion => `- ${suggestion}`)
      .join("\n");

    return formattedResults ? `Historical Data:\n${formattedResults}` : "";
  }

  _fetchEntityContext(query) {
    const emResults = this.em.search(query);
    if (emResults.length === 0) {
      return "";
    }
    const formattedResults = emResults.map(result => `- ${result.context}`).join("\n");
    return `Entities:\n${formattedResults}`;
  }
}

export { ContextualMemory };