import { Memory } from '../memory';
import { RAGStorage } from '../storage/rag_storage';
import { EntityMemoryItem } from './entity_memory_item';

class EntityMemory extends Memory {
  /**
   * EntityMemory class for managing structured information about entities
   * and their relationships using SQLite storage.
   * Inherits from the Memory class.
   */
  constructor(crew = null, embedderConfig = null) {
    const storage = new RAGStorage({
      type: "entities",
      allowReset: false,
      embedderConfig: embedderConfig,
      crew: crew,
    });
    super(storage);
  }

  save(item) {
    /**
     * Saves an entity item into the SQLite storage.
     * @param {EntityMemoryItem} item - The entity item to save.
     */
    if (!(item instanceof EntityMemoryItem)) {
      throw new Error("Item must be an instance of EntityMemoryItem");
    }
    const data = `${item.name}(${item.type}): ${item.description}`;
    super.save(data, item.metadata);
  }

  reset() {
    try {
      this.storage.reset();
    } catch (e) {
      throw new Error(`An error occurred while resetting the entity memory: ${e.message}`);
    }
  }
}

export { EntityMemory };