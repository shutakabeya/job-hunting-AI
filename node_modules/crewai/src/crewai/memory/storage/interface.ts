class Storage {
  /**
   * Abstract base class defining the storage interface
   */

  save(value, metadata) {
    /**
     * Save a value with associated metadata
     * @param {any} value - The value to save
     * @param {Object} metadata - Associated metadata
     * @throws {Error} If not implemented by subclass
     */
    throw new Error('Method "save" must be implemented.');
  }

  search(key) {
    /**
     * Search for a value using a key
     * @param {string} key - The key to search for
     * @returns {Object} The search results
     * @throws {Error} If not implemented by subclass
     */
    throw new Error('Method "search" must be implemented.');
  }

  reset() {
    /**
     * Reset the storage
     * @throws {Error} If not implemented by subclass
     */
    throw new Error('Method "reset" must be implemented.');
  }
}

module.exports = { Storage };