import { Memory } from '../memory';
import { RAGStorage } from '../storage/rag_storage';
import { ShortTermMemoryItem } from './short_term_memory_item';

class ShortTermMemory extends Memory {
    constructor(crew = null, embedderConfig = null) {
        const storage = new RAGStorage({
            type: "short_term",
            embedderConfig: embedderConfig,
            crew: crew
        });
        super(storage);
    }

    save(value, metadata = null, agent = null) {
        const item = new ShortTermMemoryItem(value, agent, metadata);
        super.save(item.data, item.metadata, item.agent);
    }

    search(query, scoreThreshold = 0.35) {
        return this.storage.search(query, scoreThreshold);
    }

    reset() {
        try {
            this.storage.reset();
        } catch (error) {
            throw new Error(`An error occurred while resetting the short-term memory: ${error.message}`);
        }
    }
}

export { ShortTermMemory };